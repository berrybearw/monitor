#!/bin/ksh
#Modify:06400_v1.1.19_add 排除awsp9開頭的process

#v1 check 順序 No.14

ls_version="1.0"
ls_version="1.1"

. /u1/etc/tmon/tmon.conf
. /u1/etc/tmon/tmon_title.conf

tmonname=$TMONNAME
mode_test=$MODE_TEST

ps_chk_html="/u1/etc/tmon/mon_log/process_${tmonname}.html"
ps_chk_html="/u1/etc/tmon/script/basement/ps_chk_${tmonname}.html"
chk_ps_file="/u1/etc/tmon/script/basement/ps_chk_${tmonname}.log"
chk_ps_file2="/u1/etc/tmon/script/basement/ps_chk2_${tmonname}.log"
chk_ps="/u1/etc/tmon/mon_log/chk_mail.log"
chk_ps_warn="/u1/etc/tmon/mon_log/chk_mail_warn.log"

unset SQLPATH

time_red=`date +%Y/%m/%d-%H:%M:%S`

#預設 每天  檢查一次 超過 1 天程序
#預設 每小時檢查一次 快超過 1 天程序

lim=$ps_lim
lim_2=$ps_lim_2

if [ "$lim" == "" ] ;then

   lim=86400
   lim_2=7200

fi

if [ "$mode_test" == "Y" ] ;then
   chk_ps_time_go="Y"
   chk_ps_2time_go="Y"

fi

function chk_ps_time {
   lim=$1
   pid_count=`cat $chk_ps_file | grep "^[[:blank:]]*[^[:blank:]]" | wc -l`

   if [ $(echo "$pid_count > 0"|bc) -eq 1 ]; then
	   pid_count=`cat $chk_ps_file | awk -v MAX=$lim '{sec=$1;if (sec>MAX) print $3 }'`
	         #awk -v MAX=$lim '{split($1, a, ":"); if (length(a)==2) sec=a[1]*60+a[2]; 
                 #else if (length(a)==3) sec=a[1]*3600+a[2]*60+a[3]; 
                 #if (sec>MAX) print $3 }' `
      echo $pid_count > $chk_ps_file2
      pid_count=`cat $chk_ps_file2 | grep "^[[:blank:]]*[^[:blank:]]" | wc -l `
      echo "over $lim sec fglrun program has $pid_count"
      if [ "$pid_count" -gt "0" ];then
         chk_warn="Y"
         echo "chk_ps : " $chk_warn >> $chk_ps_warn
         echo '<table width=100% border=1>
         <tr>
         <th colspan=3 style="background-color:#FFECC9">fglrun Process執行時間大於 '$lim' sec</th>
         </tr>
         <tr><td>TIME</td><td>PID</td><td>USER</td><td>COMMAND</td>' >> $ps_chk_html
         #  echo ""
         #  echo "<b>=====Process執行時間大於1天=====</b>"
         #  echo ""
         #
         #  #echo "" >> $log_dir/"$today".log
         #  #echo "=====Process執行時間大於1天=====" >> $log_dir/"$today".log
         #  #echo "" >> $log_dir/"$today".log
         #
           for l_pid in `cat "$chk_ps_file2" `
         
           do
           # echo $l_pid
             i=1
             record=`cat $chk_ps_file | awk '{ if ( $3=='$l_pid' ) {print $1" "$3" "$4}}'`
             echo "<tr>" >> $ps_chk_html
             while [ "$i" -le 4 ];
             do
                if [ "$i" -eq 4 ];then
                  record_p=`cat $chk_ps_file |awk '{ if ( $3=='$l_pid' ){print $1=$2=$3=$4="";print $0}}'`
                  echo "<td>$record_p</td>" >> $ps_chk_html
                else
                  record_p=`echo "$record"|awk '{print $'$i'}'`
                  echo "<td>$record_p</td>" >> $ps_chk_html
         #        #echo ${record} >> $log_dir/"$today".log
                fi
                i=`expr $i + 1`
             done
             echo "</tr>" >> $ps_chk_html
           done
         echo "</table>" >> $ps_chk_html
      else 
         echo '<table width=100% border=1>
          <tr>
          <th colspan=3 style="background-color:#FFECC9">fglrun Process 沒執行時間大於 '$lim' sec</th>
          </tr> ' >> $ps_chk_html
         echo "</table>" >> $ps_chk_html
      fi
   else
      echo '<table width=100% border=1>
         <tr>
         <th colspan=3 style="background-color:#FFECC9">Process 沒發現 fglrun 作業 </th>
         </tr> ' >> $ps_chk_html
      echo "</table>" >> $ps_chk_html
      echo "請下載 " $ps_chk_html
      exit
   fi

}

if [ "$chk_ps_time_go" == "Y" ] ;then
   echo " now is  check over $lim sec program "
   proc=`ps -eo etimes,stime,pid,user,cmd | grep -v grep |grep -v azzp95 | grep -v awsp9 `
   echo $proc > $chk_ps_file
   #echo "================================="		     
   chk_ps_time $lim
   
fi

if [ "$chk_ps_2time_go" == "Y" ] ;then
	pid_count=`cat $chk_ps_file | awk -v MAX=$lim_2 '{sec=$1;if (sec>MAX) print $3 }' | head -10`
	        #awk -v MAX=$lim_2 '{split($1, a, ":"); if (length(a)==2) sec=a[1]*60+a[2]; 
                #else if (length(a)==3) sec=a[1]*3600+a[2]*60+a[3]; 
                #if (sec>MAX) print $3 }' | head -10 `
     j=0
     if [ "$pid_count" == "" ] ; then 
        echo '<table width=100% border=1>
          <tr>
          <th colspan=3 style="background-color:#FFECC9">fglrun Process 沒執行時間大於 '$lim_2' sec </th>
          </tr> ' >> $ps_chk_html
        echo " </table> " >> $ps_chk_html
        echo "請下載 " $ps_chk_html
        echo "over $lim_2 sec fglrun program has " $j
        exit
     else
        chk_warn="Y"
        echo "chk_ps : " $chk_warn >> $chk_ps_warn
        echo '<table width=100% border=1>
          <tr>
          <th colspan=3 style="background-color:#FFECC9">fglrun Process 執行時間大於 '$lim_2' sec </th>
          </tr> ' >> $ps_chk_html
     fi     
     for i in $pid_count
     do
        proc_time=`cat $chk_ps_file | awk '{ if ($3 == '$i' ) {print $1}}'`
        num=`echo $proc_time | grep ":" | wc -l `
        if [ $num -eq 3 ] ; then
           proc_hour=`echo "$proc_time" | awk -F : '{print $1}' | awk '{print int($0)}'`
        else 
           proc_hour="00"
        fi
        #echo $proc_hour
        proc_mim=`echo "$proc_time" | awk -F : '{print $2}' | awk '{print int($0)}'`
        #echo $proc_min
        proc_sec=`echo "$proc_time" | awk -F : '{print $3}' | awk '{print int($0)}'`
        if [ $(echo "$proc_hour" != "00" | bc) -eq 1 ] ; then
           proc_hour=`expr $proc_hour \* 3600`
        fi
        if [ $(echo "$proc_mim" != "00" | bc) -eq 1 ] ; then
           proc_mim=`expr $proc_mim \* 60`
        fi
        proc_time=`expr $proc_hour + $proc_mim + $proc_sec `
        proc_time=`expr 79200 - $proc_time `
        if [ `echo "$proc_time > 3600" | bc` -eq 1 ] ; then
           proc_hour=`expr $proc_time / 3600`
           proc_min=`expr $proc_hour \* 3600 `
           proc_min=`expr $proc_time - $proc_min `
           #echo "@@@@" $proc_min
           if [ `echo "$proc_min > 0" | bc` -eq 1 ] ; then
              proc_min=`expr $proc_min / 60`
           fi
        fi
        proc_pid=`cat $chk_ps_file | awk '{ if ( $3 == '$i' ) {print $3}}' `
        proc_user=`cat $chk_ps_file | awk '{if ( $3 == '$i' ) {print $4}}' `
        proc_cmd=`cat $chk_ps_file | awk '{if ( $3 == '$i' ) {$1=$2=$3=$4="" ;print $0}}' `
        echo '<tr><td>在多久 1 天  </td>  '"<td> $proc_hour "hr :" $proc_min "min" </td></tr>" >> $ps_chk_html
        echo '<tr><td> pid ' "<td> $proc_pid </td></tr>" >> $ps_chk_html
        echo '<tr><td> user ' "<td> $proc_user </td></tr>" >> $ps_chk_html
        echo '<tr><td> cmd ' "<td> $proc_cmd </td></tr>" >> $ps_chk_html
        echo $proc_hour "hr :" $proc_min "min"
        j=$(($j + 1))
    done
    
    echo "</table>" >> $ps_chk_html
    echo "over $lim_2 sec fglrun program has " $j
fi

echo "請下載 " $ps_chk_html
