#!/bin/ksh

#v1 check 順序 No.08

. /u1/etc/tmon/tmon.conf

ls_version="1.0"

tmonname=$TMONNAME
mode_test=$MODE_TEST

redo_file="/u1/etc/tmon/script/basement/redosw_chk_${tmonname}.html"
chk_redosw="/u1/etc/tmon/mon_log/chk_mail.log"

time_chk=`date '+%H'`

if [ "$mode_test" == "Y" ] ;then
   chk_redosw_time_go="Y"
fi

if [ "$chk_redosw_time_go" == "Y" ] ; then

   ov="48"
   #ov="10"
   #echo "ZONE="$ZONE
   if [ -n "$1" ];then
       unset SQLPATH
       unset ORACLE_PATH
       export ZONE=$1
      if [ -z "$sqlpass" ];then
         if [ -z "$2" ];then
             export sqlpass=du
         else
             export sqlpass=$2
             	
         fi
      fi
   fi
   
   if [ -z "$1" ];then
       echo "Usage: /u1/etc/tmon/script/chk_redosw [\$ORACLE_SID]"
       echo "Ex   : /u1/etc/tmon/script/chk_redosw topprd"
       exit 
   fi
   
   #echo "ZONE="$ZONE
   
   daily_ck=`sqlplus -S "du/$sqlpass@$ZONE" << !
             set feedback off
             col DAT for a12
             col CNT for 9999
             SELECT TO_CHAR(FIRST_TIME, 'yyyymmdd') DAT , COUNT(*) CNT
             FROM V\\$LOG_HISTORY
             WHERE TRUNC(FIRST_TIME) BETWEEN TRUNC(SYSDATE) - 6 and TRUNC(SYSDATE)
             GROUP BY TO_CHAR(FIRST_TIME, 'yyyymmdd')
             ORDER BY TO_CHAR(FIRST_TIME, 'yyyymmdd') DESC;
             exit
!
`
   
   sw_ov=`echo "$daily_ck"|awk '{if($2 >= '$ov') {print $2}}'|grep -Eo "[0-9]+"`
   
   if [ -z "$sw_ov" ];then
   exit
   fi
   
   echo "<table width=100% border=1>
   <tr>
   <th colspan=2 style="background-color:#FFECC9">Redo log 切換次數檢查</th>
   </tr>" >> $redo_file
   daily_ck_wc=`echo "$daily_ck"|wc -l`
   i=1
   while [ "$i" -le "$daily_ck_wc" ];
   do
      t=1
      if [ "$i" -eq "1" ];then
         i=`expr $i + 1`
      elif [ "$i" -eq "3" ];then
         i=`expr $i + 1`
      else
         echo "<tr>" >> $redo_file
         daily_ck_b=`echo "$daily_ck"|sed -n ''$i','$i' p'`
         while [ "$t" -le 2 ];
         do
            daily_ck_a=`echo "$daily_ck_b"|awk '{print $'$t'}'`
   	 echo "<td>$daily_ck_a</td>" >> $redo_file
            t=`expr $t + 1`
         done
         echo "</tr>" >> $redo_file
         i=`expr $i + 1`
      fi
   done
   sw_max=`echo "$sw_ov"|sort -n -r|head -n 1`
   echo "<tr><td colspan=2 align="center" valign="middle">====Redo log切換次數最大日期====</td></tr>
   <tr><td>DAT</td><td>CNT</td></tr>" >> $redo_file
   i=1
   echo "<tr>" >> $redo_file
   while [ "$i" -le 2 ];
   do
      sw_max_b=`echo "$daily_ck"|grep "$sw_max"$|awk '{print $'$i'}'`
      echo "<td>$sw_max_b</td>" >> $redo_file
      i=`expr $i + 1`
   done
   echo "</tr>" >> $redo_file
   maxd=`echo "$daily_ck"|grep "$sw_max"$|awk '{print $1}'`
   maxd00=`echo "$maxd""_00"`
   maxd23=`echo "$maxd""_23"`
   maxd_ck=`sqlplus -S "du/$sqlpass@$ZONE" << !
             set feedback off
             set pagesize 30
             col DATETIME_HH24 for a14
             col CNT for 9999
             SELECT TO_CHAR(FIRST_TIME, 'yyyymmdd_hh24') DATETIME_HH24, COUNT(*) CNT
             FROM V\\$LOG_HISTORY
             WHERE --FIRST_TIME BETWEEN sysdate - 6 and sysdate
             TO_CHAR(FIRST_TIME, 'yyyymmdd_hh24') BETWEEN '$maxd00' and '$maxd23'
             GROUP BY TO_CHAR(FIRST_TIME, 'yyyymmdd_hh24')
             ORDER BY TO_CHAR(FIRST_TIME, 'yyyymmdd_hh24') DESC;
             exit
!
`
   maxd_ck_wc=`echo "$maxd_ck"|wc -l`
   echo "<tr><td colspan=2 align="center" valign="middle">====當日切換次數分析====</td></tr>" >> $redo_file
   i=1
   while [ "$i" -le "$maxd_ck_wc" ];
   do
      t=1
      if [ "$i" -eq "1" ];then
         i=`expr $i + 1`
      elif [ "$i" -eq "3" ];then
         i=`expr $i + 1`
      else
         echo "<tr>" >> $redo_file
         maxd_ck_b=`echo "$maxd_ck"|sed -n ''$i','$i' p'`
         while [ "$t" -le 2 ];
         do
            maxd_ck_a=`echo "$maxd_ck_b"|awk '{print $'$t'}'`
   	 echo "<td>$maxd_ck_a</td>" >> $redo_file
   	 t=`expr $t + 1`
         done
         echo "</tr>" >> $redo_file
         i=`expr $i + 1`
      fi
   done
   echo "</table>" >> $redo_file
   
fi
