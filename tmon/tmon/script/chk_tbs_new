#!/bin/ksh

#v1 check 順序 No.09

. /u1/etc/tmon/tmon.conf

#20211104 更新 SQL 可以檢查看 空間是否有 MAX 然後在計算 使用量

ls_version="1.0"

tmonname=$TMONNAME
mode_test=$MODE_TEST

chk_logdir='/u1/etc/tmon/script/basement'
tbs_chk_html="/u1/etc/tmon/script/basement/tbs_chk_${tmonname}.html"

chk_tbs="/u1/etc/tmon/mon_log/chk_mail.log"

time_red=`date +%Y/%m/%d-%H:%M:%S`

if [ "$mode_test" == "Y" ] ;then
   chk_tbs_time_go="Y"
   DBCHK="Y"
fi

function title_tbs {
   echo '<table width=100% border=1>
   <tr>
   <th colspan=2 style=background-color:#00E3E3>項目 資料庫表空間 </th>
   </tr>
   </table>
   ' > $tbs_chk_html
}

function chk_tbs_ok {
      echo '<table width=100% border=1>
      <tr>
      <th colspan=7 style="background-color:#FFECC9">'$time_red' 表空間使用率</th>
      </tr>
      <tr>
      <td colspan=7 align="center" valign="middle" >DB tablespace use not over '$tbs_lim' % </td>
      </tr>
      </table>
      ' >> $tbs_chk_html
}

function chk_tbs_space {
   i=0
   while [ `echo "$i <= $n" | bc` -eq 1 ];
      do
         if [ "$i" == 0 ] ; then
            chk_name='TABLESPACE_NAME'
            tbs_allocat='ALLOCATED ( MB )' 
            tbs_free='FREE ( MB )'
            tbs_use='USE ( MB )'
            tbs_free_per='FREE %'
            tbs_use_per='USE %'
            tbs_max='MAX ( MB )'
   	      echo '<tr><td>' $chk_name '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_allocat '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_free '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_use '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_free_per '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_use_per '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_max '</td></tr>' >>$tbs_chk_html
         else
            chk_name=`cat $chk_logdir/q_tbs_${tmonname}.log |awk '{if($6 >= '$tbs_lim') if($3 <= '$tbs_lim_use') {print $1}}' | sed -n "${i},${i}p" `
            tbs_allocat=`cat $chk_logdir/q_tbs_${tmonname}.log | grep $chk_name | awk '{print $2}'`
            #tbs_allocat=`echo | awk "{ print $tbs_allocat / 1024 }" `
            tbs_free=`cat $chk_logdir/q_tbs_${tmonname}.log | grep $chk_name | awk '{print $3}'`
            #tbs_free=`echo | awk "{ print $tbs_free / 1024 }" `
            tbs_use=`cat $chk_logdir/q_tbs_${tmonname}.log | grep $chk_name | awk '{print $4}'`
            #tbs_use=`echo | awk "{ print $tbs_use / 1024 }" `
            tbs_free_per=`cat $chk_logdir/q_tbs_${tmonname}.log |grep $chk_name | awk '{print $5}'`
            tbs_use_per=`cat $chk_logdir/q_tbs_${tmonname}.log |grep $chk_name | awk '{print $6}'`
            tbs_max=`cat $chk_logdir/q_tbs_${tmonname}.log |grep $chk_name | awk '{print $7}'`
            #tbs_max=`echo | awk "{ print $tbs_max / 1024 }" `
   	      echo '<tr><td>' $chk_name '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_allocat '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_free '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_use '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_free_per '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_use_per '</td>' >>$tbs_chk_html
   	      echo '<td>' $tbs_max '</td></tr>' >>$tbs_chk_html
            if [ "$mode_test" == "Y" ]; then
               echo "tablespace name : " $chk_name
               echo "use % : " $tbs_use_per
               echo "free (MB) : " $tbs_free
               echo "Max (MB) : " $tbs_max
            fi
         fi
         i=`expr $i + 1 `
      done
      echo "</table>" >> $tbs_chk_html

}

if [ "$CHKTIME" == "Y" ] ; then
   chk_tbs_time_go="Y"
   DBCHK="Y"
fi


if [ "$DBCHK" == "Y" ] ; then
      sql=$(
            echo "
              set colsep ' '     
              set pagesize 0   
              set trimspool on 
              set headsep off  
              set linesize 200  
              
              spool ${chk_logdir}/q_tbs_${tmonname}.log

                 with tbs as (
                 select 
                 a.tablespace_name as namea,
                 round(a.bytes_alloc/1048576) alloc,
                 round((a.maxbytes-(a.bytes_alloc-nvl(b.bytes_free, 0)))/1048576) freea,
                 round((a.bytes_alloc - nvl(b.bytes_free, 0)) /1048576 ) usea,
                 100-round(((a.bytes_alloc - nvl(b.bytes_free, 0))/ a.bytes_alloc) *100) \"% Free\",
                 round(((a.bytes_alloc - nvl(b.bytes_free, 0)) / a.bytes_alloc) *100) \"% Used\",
                 round(maxbytes /1048576) maxa,
                 round(c.e1/1048576,2) as re
                 from (select f.tablespace_name,
                 sum(f.bytes) bytes_alloc,
                 sum(decode(f.autoextensible, 'YES',f.maxbytes,'NO',f.bytes)) maxbytes
              from dba_data_files f
              group by tablespace_name) a,
              (select f.tablespace_name,
              sum(f.bytes) bytes_free
              from dba_free_space f
              group by tablespace_name) b,
              (SELECT TS_NAME, SUM(SPACE * 8192) e1  FROM DBA_RECYCLEBIN GROUP BY TS_NAME) c
              where a.tablespace_name = b.tablespace_name (+)
              and a.tablespace_name = c.ts_name (+) 
              union all
              select
                 h.tablespace_name as \"Tablespace)Name\",
                 round(sum(h.bytes_free + h.bytes_used) /1048576 ) megs_alloc,
                 round(sum((h.bytes_free + h.bytes_used) - nvl(p.bytes_used,0)) /1048576 ) megs_free,
                 round(sum(nvl(p.bytes_used, 0)) /1048576) megs_used,
                 round((sum((h.bytes_free + h.bytes_used) -
                 nvl(p.bytes_used, 0))/ sum(h.bytes_used + h.bytes_free)) * 100) Pct_Free,
                 100 -round((sum((h.bytes_free + h.bytes_used) -
                 nvl(p.bytes_used, 0))/ sum(h.bytes_used + h.bytes_free)) * 100) pct_used,
                 round(sum(f.maxbytes) /1048576 ) max,
                 0
              from sys.v_\$TEMP_SPACE_HEADER h,
              sys.v_\$temp_extent_pool p,
              dba_temp_files f
              where p.file_id(+)= h.file_id
              and p.tablespace_name(+)=h.tablespace_name
              and f.file_id = h.file_id
              and f.tablespace_name = h.tablespace_name
              group by h.tablespace_name 
              ) , 
              y as (select namea
                           ,alloc
                           ,freea
                           ,usea
                           ,maxa
                           ,case when maxa > alloc then maxa else alloc end as x
                           ,re 
                     from tbs) 
             select namea as \"TABLESPACE_NAME\"
                    ,alloc as \"ALLOCATE(MB)\"
                    ,freea as \"FREE(MB)\"
                    ,usea as \"USED(MB)\"
                    ,round(((x-usea)/x)*100,2) as \"free %\"
                    ,round((usea/x)*100,2) as \"use %\" 
                    ,maxa as \"MAX(MB)\"
                    ,re as \"RECYCLE(MB)\"
               from y ;               
              SPOOL OFF
              EXIT
      
              " | sqlplus -S "du/du@$ZONE"
              )
   
   #判斷是否大於lim設定值
   tbs_ov=`cat $chk_logdir/q_tbs_${tmonname}.log |awk '{if($6 >= '$tbs_lim') if($3 <= '$tbs_lim_use') {print $6}}'`
   tbs_ov_warn=`cat $chk_logdir/q_tbs_${tmonname}.log |awk '{if($6 >= '$tbs_lim') {print $6}}'`
   ttbs_ov=`cat $chk_logdir/q_tbs_${tmonname}.log | grep "TEMPTBS" |awk '{if($6 >= '$tbs_lim') if($3 <= '$tbs_lim_use') {print $6}}'`
   ttbs_ov_warn=`cat $chk_logdir/q_tbs_${tmonname}.log | grep "TEMPTBS" |awk '{if($6 >= '$tbs_lim') if($3 <= '$tbs_lim_use') {print $6}}'`
   ttspov=`cat $chk_logdir/q_tbs_${tmonname}.log | grep "TEMP" |awk '{if($6 >= '$tbs_lim') if($3 <= '$tbs_lim_use') {print $6}}'`
   n=`cat $chk_logdir/q_tbs_${tmonname}.log |awk '{if($6 >= '$tbs_lim') if($3 <= '$tbs_lim_use') {print $6}}'| wc -l`
   title_tbs  # title function

   if [ -n "$tbs_ov"  ];then
      chk_tbs_time_go="Y"
      chk_mail="Y"
      echo "chk_tbs : " $chk_mail >> $chk_tbs
      echo "tbs_lim : " $tbs_lim >> $chk_tbs
      echo '<table width=100% border=1>
      <tr>
      <th colspan=7 style="background-color:#FFECC9">'$time_red' 表空間使用率</th>
      </tr>
      <tr>
      <td colspan=7 align="center" valign="middle" style="background-color:red" >NOW!! DB tablespace use over '$tbs_lim' % </td>
      </tr>
      <tr>
      <td colspan=7 align="center" valign="middle" style="background-color:red" > DB tablespace free is lower than '$tbs_lim_use' MB </td>
      </tr>
      <tr>
      <td colspan=7 align="center" valign="middle"> TABLESPACE </td>
      </tr>' >> $tbs_chk_html
      check_log="cat $chk_logdir/q_tbs_${tmonname}.log"
      if [ "$mode_test" == "Y" ]; then
         echo "tbs_lim %   : " $tbs_lim 
         echo "tbs_lim_use : " $tbs_lim_use " MB"
         echo ""
         chk_tbs_space  # space function
         echo "|----------|"
         echo "資料庫使用空間 use over '$tbs_lim' %"
         echo "free is lower than '$tbs_lim_use' MB"
         echo "|----------|"
         echo "請下載 : " $tbs_chk_html
      else
         chk_tbs_space  # space function
      fi   

   else
      if [ "$mode_test" == "Y" ]; then
         echo "tbs_lim %   : " $tbs_lim 
         echo "tbs_lim_use : " $tbs_lim_use
         echo ""
         echo "|----------|"
         echo "資料庫使用空間 檢查 ok"
         echo "|----------|"
         chk_tbs_ok  # OK function
         echo "請下載 : " $tbs_chk_html
      else
         chk_tbs_ok  # OK function
      fi      
   fi

fi

if [ "$mode_test" == "Y" ] ; then

   if [ "$chk_mail" == "Y" ] ; then
      echo ''
   else      
      exit
   fi
fi

if [ "$chk_tbs_time_go" == "Y" ] ;then

   if [ -n "$1" ];then
      unset SQLPATH
      unset ORACLE_PATH
      export ZONE=$1
      if [ -z "$sqlpass" ];then
         if [ -z "$2" ];then
            export sqlpass=du
         else
            export sqlpass=$2    	
         fi
      fi
   fi
   
   #echo "=====表格空間使用率====="

   function chk_tbs_temptabs {
      i=0
      while [ "$i" -le "$temptabs_wc" ]
      do
         t=1
         if [ "$i" == 0 ] ; then
            a='SID'
            b='serial' 
            c='process'
            d='SEGMENT_NAME'
            e='SEGMENT_TYPE'
            f='owner'
            g='TABLESPACE_NAME'
            h='use (MB)'
          echo '<tr><td>' $a '</td>' >>$tbs_chk_html
          echo '<td>' $b '</td>' >>$tbs_chk_html
          echo '<td>' $c '</td>' >>$tbs_chk_html
          echo '<td>' $d '</td>' >>$tbs_chk_html
          echo '<td>' $e '</td>' >>$tbs_chk_html
          echo '<td>' $f '</td>' >>$tbs_chk_html
          echo '<td>' $g '</td>' >>$tbs_chk_html
          echo '<td>' $h '</td></tr>' >>$tbs_chk_html
            i=`expr $i + 1`
         else
            if [ "$i" -eq 1 ];then
               i=`expr $i + 1`
            elif [ "$i" -eq 3 ];then
               i=`expr $i + 1`
            else
               echo "<tr>" >> $tbs_chk_html
               temptabs_b=`cat ${chk_logdir}/q_out_${tmonname}.log |sed -n ''$i','$i' p'`
               while [ "$t" -le 8 ]
               do
                  temptabs_a=`cat ${chk_logdir}/q_out_${tmonname}.log |awk '{print $'$t'}'`
      	          echo "<td>$temptabs_a</td>" >> $tbs_chk_html
                  t=`expr $t + 1`
               done
               echo "</tr>" >> $tbs_chk_html
               i=`expr $i + 1`
            fi
         fi
      done
   
      #TEMPTABS空間佔用程式
      
      temptabs_p=`cat ${chk_logdir}/q_out_${tmonname}.log |awk '{print $3}'|grep -Eo "[0-9]+"|uniq`
      #
      if [ -n "$temptabs_p" ];then
         temptabs_n=`echo "$temptabs_p"|wc -l`
         
         case $temptabs_n in
          1) p1=`echo $temptabs_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
          ;;
          2) p1=`echo $temptabs_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $temptabs_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
          ;;
          3) p1=`echo $temptabs_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $temptabs_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           p3=`echo $temptabs_p|awk '{print $3}'`
           p3a=`ps -ef|grep -v grep|grep -w $p3`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
           if [ -n "$p3a" ];then
              echo "$p3a" >> $p_file
           fi
          ;;
          4) p1=`echo $temptabs_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $temptabs_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           p3=`echo $temptabs_p|awk '{print $3}'`
           p3a=`ps -ef|grep -v grep|grep -w $p3`
           p4=`echo $temptabs_p|awk '{print $4}'`
           p4a=`ps -ef|grep -v grep|grep -w $p4`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
           if [ -n "$p3a" ];then
              echo "$p3a" >> $p_file
           fi
           if [ -n "$p4a" ];then
              echo "$p4a" >> $p_file
           fi
          ;;
          5) p1=`echo $temptabs_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $temptabs_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           p3=`echo $temptabs_p|awk '{print $3}'`
           p3a=`ps -ef|grep -v grep|grep -w $p3`
           p4=`echo $temptabs_p|awk '{print $4}'`
           p4a=`ps -ef|grep -v grep|grep -w $p4`
           p5=`echo $temptabs_p|awk '{print $5}'`
           p5a=`ps -ef|grep -v grep|grep -w $p5`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
           if [ -n "$p3a" ];then
              echo "$p3a" >> $p_file
           fi
           if [ -n "$p4a" ];then
              echo "$p4a" >> $p_file
           fi
           if [ -n "$p5a" ];then
              echo "$p5a" >> $p_file
           fi
          ;;
          esac
          
          if [ -f "$p_file" ];then
             p=`cat $p_file`
             p_wc=`cat $p_file|wc -l`
             p_head=`ps -ef|head -n 1`
          fi
         
          if [ -n "$p_wc" ];then
             echo "<tr><td colspan=8 align="center" valign="middle">====TEMPTABS 最大運行程式====</td></tr>" >> $tbs_chk_html
             i=1
             echo "<tr>" >> $tbs_chk_html
             while [ "$i" -le 8 ]
             do
                p_head_b=`echo "$p_head"|awk '{print $'$i'}'`
                if [ "$i" -eq 8 ];then
                   echo "<td>$p_head_b</td>" >> $tbs_chk_html
                else
                   echo "<td>$p_head_b</td>" >> $tbs_chk_html
                fi
                i=`expr $i + 1`
             done
             echo "</tr>" >> $tbs_chk_html
             i=1
             while [ "$i" -le "$p_wc" ];
             do
                t=1
                p_b=`echo "$p"|sed -n ''$i','$i' p'`
                echo "<tr>" >> $tbs_chk_html
                while [ "$t" -le 8 ];
                do
                   if [ "$t" -eq 8 ];then
                      p_b_b=`echo "$p_b"|awk '{$1=$2=$3=$4=$5=$6=$7="";print $0}'`
         	           echo "<td>$p_b_b</td>" >> $tbs_chk_html
                   else
         	           p_b_b=`echo "$p_b"|awk '{print $'$t'}'`
         	           echo "<td>$p_b_b</td>" >> $tbs_chk_html
                   fi
         	        t=`expr $t + 1`
                done
                echo "</tr>" >> $tbs_chk_html
                i=`expr $i + 1`
             done
          fi
      fi
      echo "</table>" >> $tbs_chk_html
   }

   if [ -n "$ttbs_ov" ] ; then
      chk_mail="Y"
      echo "chk_tbs : " $chk_mail >> $chk_tbs
      #判斷是否大於lim設定值
      temptabs=$(
         echo "
         set colsep ' '     
         set pagesize 0   
         set trimspool on 
         set headsep off  
         set linesize 200  
         col owner for a6
         col SEGMENT_NAME for a50
         col process for a8

         spool ${chk_logdir}/q_out_${tmonname}.log

         select vs.sid,vs.serial#,vs.process,c.SEGMENT_NAME,c.SEGMENT_TYPE,c.owner,c.TABLESPACE_NAME,c.MB
         from
         v\$session vs,
         (select va.sid,b.SEGMENT_NAME,b.SEGMENT_TYPE,b.owner,b.TABLESPACE_NAME,b.MB
         from v\$access va,
         (select * from 
         (SELECT owner,segment_name,segment_type,tablespace_name,SUM(bytes)/1024/1024 MB
         FROM dba_segments
         WHERE TABLESPACE_NAME = 'TEMPTABS'
         and segment_type='TABLE'
         and SEGMENT_NAME not like 'BIN%'
         group by owner,segment_name,segment_type,tablespace_name
         order by MB desc ) a
         WHERE ROWNUM < 6) b
         where va.object=b.segment_name) c
         where c.sid=vs.sid;
         exit
         spool off
         " | sqlplus -S "du/du@$ZONE"
         )

      if [ -n "$temptabs" ];then
         chk_Warn="Y"
         echo "chk_Warn : " $chk_Warn
         echo '<table width=100% border=1>
         <tr>
         <th colspan=8 style="background-color:#FFECC9">ORACLE TEMPTABS表空間檢查</th>
         </tr>
         <tr>
         <td colspan=8 align="center" valign="middle">===TEMPTABS表空間 over <font color=red>'$tbs_lim' %</font>===</td> 
         </tr>
         <tr>
         <td colspan=8 align="center" valign="middle">===TEMPTABS空間最大佔用===</td>
         </tr>' >> $tbs_chk_html
         
         temptabs_wc=`cat ${chk_logdir}/q_out_${tmonname}.log |wc -l`
         chk_tbs_temptab  # process function
      fi

   fi
   
   
   tbs_ov=`cat $chk_logdir/q_out.log |awk '{if($6 >= '$tbs_lim') {print $6}}'|grep -Eo "[0-9]+"`
   n=`cat $chk_logdir/q_out.log |awk '{if($6 >= '$tbs_lim') {print $6}}'|grep -Eo "[0-9]+" | wc -l`

   if [ -n "$ttspov" ];then
      echo '<table width=1200 border=1>
      <tr>
      <th colspan=8 style="background-color:#FFECC9">ORACLE TEMP表空間檢查</th>
      </tr>
      <tr>
      <td colspan=8 align="center" valign="middle">===TEMP表空間 over <font color=red>'$lim' %</font>===</td> 
      </tr>' >> $tbs_chk_html
   
      ttsp_wc=`echo "$ttsp"|wc -l`
      i=1
      while [ "$i" -le "$ttsp_wc" ];
      do
         t=1
         if [ "$i" -eq "1" ];then
            i=`expr $i + 1`
         elif [ "$i" -eq "3" ];then
            i=`expr $i + 1`
         else
            echo "<tr>" >> $tbs_chk_html
            ttsp_b=`echo "$ttsp"|sed -n ''$i','$i' p'`
            while [ "$t" -le 8 ];
            do
               ttsp_a=`echo "$ttsp_b"|awk '{print $'$t'}'`
      	 echo "<td>$ttsp_a</td>" >> $tbs_chk_html
               t=`expr $t + 1`
            done
            echo "</tr>" >> $tbs_chk_html
            i=`expr $i + 1`
         fi
      done
      #temp佔用程式檢查
      
      o_temp=`sqlplus -S "du/$sqlpass@$ZONE" << EOF
      set linesize 200 ;
      set pagesize 5000;
      col username for a8
      col sid for 999999
      col serial# for 999999
      col process for a8
      col tablespace for a11
      set feedback off
      select * from
      (select distinct tu.username,se.sid,se.serial#,se.process,tablespace,blocks*16/1024 "USE(MB)",segtype,tu.sql_id
      from
      (select username,session_addr,sqladdr,sqlhash,sql_id,tablespace,sum(blocks) blocks,segtype,contents
      from v\\$tempseg_usage group by username,sqladdr,sqlhash,sql_id,tablespace,segtype,contents,session_addr) tu,
      (select sql_text,sql_id,address,hash_value from v\\$sql group by sql_text,sql_id,address,hash_value) sq,
      (select username,machine,saddr,sid,serial#,process from v\\$session) se
      where tu.sqladdr=sq.address and tu.sql_id=sq.sql_id and tu.sqlhash=sq.hash_value and tu.username=se.username and tu.session_addr=se.saddr
      order by "USE(MB)" desc) a
      where ROWNUM < 6;
      exit
EOF
`
      
      #echo $o_temp
      if [ -n "$o_temp" ];then
         echo "<tr> <td colspan=8 align="center" valign="middle">====TEMP 最大佔用====</td> 
         </tr>" >> $tbs_chk_html
         o_temp_wc=`echo "$o_temp"|wc -l`
         i=1
         while [ "$i" -le "$o_temp_wc" ];
         do
            t=1
            if [ "$i" -eq "1" ];then
               i=`expr $i + 1`
            elif [ "$i" -eq "3" ];then
               i=`expr $i + 1`
            else
               echo "<tr>" >> $tbs_chk_html
               o_temp_b=`echo "$o_temp"|sed -n ''$i','$i' p'`
               while [ "$t" -le 8 ];
               do
                  o_temp_a=`echo "$o_temp_b"|awk '{print $'$t'}'`
         	 echo "<td>$o_temp_a</td>" >> $tbs_chk_html
         	 t=`expr $t + 1`
               done
               echo "</tr>" >> $tbs_chk_html
               i=`expr $i + 1`
            fi
         done
      fi
      
      
      #TEMP sql語句
      
      o_temp_id=`echo "$o_temp"|awk '{print $8}'`
      o_temp_idn=`echo "$o_temp_id"|wc -l`
      let o_temp_idn=$o_temp_idn-3
      
      if [ -n "$o_temp_idn" ] && [ "$o_temp_idn" -gt "0" ];then
         echo "<tr>
         <td colspan=8 align="center" valign="middle">===TEMP TOP SQL===</td> 
         </tr>
         <tr><td>SQL_ID</td><td colspan=7>SQL_TEXT</td></tr>" >> $tbs_chk_html
      
      case $o_temp_idn in
        1)
         idn1=`echo $o_temp_id|awk '{print "\047"$3"\047"}'`
         st1=`sqlplus -S "du/$sqlpass@$ZONE" << EOF
            set heading off
            set pagesize 100
            col sql_text for a50
            select '<tr><td>'||sql_id||'</td> <td colspan=7>'||sql_text||'</td></tr>'
            from(
            select distinct sql_id,sql_text from v\\$sql
            where sql_id in($idn1));
            exit
EOF
`
        echo "$st1" >> $tbs_chk_html
        ;;
   
        2)
         idn2=`echo $o_temp_id|awk '{print "\047"$3"\047"",""\047"$4"\047"}'`
         st2=`sqlplus -S "du/$sqlpass@$ZONE" << EOF
            set heading off
            set pagesize 100
            col sql_text for a50
            select '<tr><td>'||sql_id||'</td> <td colspan=7>'||sql_text||'</td></tr>'
            from(
            select distinct sql_id,sql_text from v\\$sql
            where sql_id in($idn2));
            exit
EOF
`
        echo "$st2" >> $tbs_chk_html
        ;;
   
        3)
         idn3=`echo $o_temp_id|awk '{print "\047"$3"\047"",""\047"$4"\047"",""\047"$5"\047"}'`
         st3=`sqlplus -S "du/$sqlpass@$ZONE" << EOF
            set heading off
            set pagesize 100
            col sql_text for a50
            select '<tr><td>'||sql_id||'</td> <td colspan=7>'||sql_text||'</td></tr>'
            from(
            select distinct sql_id,sql_text from v\\$sql
            where sql_id in($idn3));
            exit
EOF
`
        echo "$st3" >> $tbs_chk_html
        ;;
   
        4)
         idn4=`echo $o_temp_id|awk '{print "\047"$3"\047"",""\047"$4"\047"",""\047"$5"\047"",""\047"$6"\047"}'`
         st4=`sqlplus -S "du/$sqlpass@$ZONE" << EOF
            set heading off
            set pagesize 100
            col sql_text for a50
            select '<tr><td>'||sql_id||'</td> <td colspan=7>'||sql_text||'</td></tr>'
            from(
            select distinct sql_id,sql_text from v\\$sql
            where sql_id in ($idn4));
            exit
EOF
`
      echo "$st4" >> $tbs_chk_html
     ;;
   		     
     5)
      idn5=`echo $o_temp_id|awk '{print "\047"$3"\047"",""\047"$4"\047"",""\047"$5"\047"",""\047"$6"\047"",""\047"$7"\047"}'`
      st5=`sqlplus -S "du/$sqlpass@$ZONE" << EOF
         set heading off
         set pagesize 100
         col sql_text for a50
         select '<tr><td>'||sql_id||'</td> <td colspan=7>'||sql_text||'</td></tr>'
         from(
         select distinct sql_id,sql_text from v\\$sql
         where sql_id in($idn5));
         exit
EOF
`
         echo "$st5" >> $tbs_chk_html
         esac
      fi
   
      o_temp_p=`echo "$o_temp"|awk '{print $4}'|grep -Eo "[0-9]+"`
      
      if [ -n "$o_temp_p" ];then
      #echo "<b>=====TEMP 最大運行程式=====</b>"
         o_temp_head=`ps -ef|head -n 1`
         o_temp_n=`echo "$o_temp_p"|wc -l`
         case $o_temp_n in
          1) p1=`echo $o_temp_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           if [ -n "$p1a" ];then
              echo "$p1a" >>$p_file
           fi
          ;;
          2) p1=`echo $o_temp_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $o_temp_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
          ;;
          3) p1=`echo $o_temp_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $o_temp_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           p3=`echo $o_temp_p|awk '{print $3}'`
           p3a=`ps -ef|grep -v grep|grep -w $p3`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
           if [ -n "$p3a" ];then
              echo "$p3a" >> $p_file
           fi
          ;;
          4) p1=`echo $o_temp_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $o_temp_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           p3=`echo $o_temp_p|awk '{print $3}'`
           p3a=`ps -ef|grep -v grep|grep -w $p3`
           p4=`echo $o_temp_p|awk '{print $4}'`
           p4a=`ps -ef|grep -v grep|grep -w $p4`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
           if [ -n "$p3a" ];then
              echo "$p3a" >> $p_file
           fi
           if [ -n "$p4a" ];then
              echo "$p4a" >> $p_file
           fi
          ;;
          5) p1=`echo $o_temp_p|awk '{print $1}'`
           p1a=`ps -ef|grep -v grep|grep -w $p1`
           p2=`echo $o_temp_p|awk '{print $2}'`
           p2a=`ps -ef|grep -v grep|grep -w $p2`
           p3=`echo $o_temp_p|awk '{print $3}'`
           p3a=`ps -ef|grep -v grep|grep -w $p3`
           p4=`echo $o_temp_p|awk '{print $4}'`
           p4a=`ps -ef|grep -v grep|grep -w $p4`
           p5=`echo $o_temp_p|awk '{print $5}'`
           p5a=`ps -ef|grep -v grep|grep -w $p5`
           if [ -n "$p1a" ];then
              echo "$p1a" >> $p_file
           fi
           if [ -n "$p2a" ];then
              echo "$p2a" >> $p_file
           fi
           if [ -n "$p3a" ];then
              echo "$p3a" >> $p_file
           fi
           if [ -n "$p4a" ];then
              echo "$p4a" >> $p_file
           fi
           if [ -n "$p5a" ];then
              echo "$p5a" >> $p_file
           fi
          ;;
         esac
         if [ -f "$p_file" ];then
            p=`cat $p_file`
            p_wc=`cat $p_file|wc -l`
            p_head=`ps -ef|head -n 1`
         fi
         if [ -n "$p_wc" ];then
            echo "<tr><td colspan=8 align="center" valign="middle">====TEMP 最大運行程式====</td></tr>" >> $tbs_chk_html
            i=1
            echo "<tr>" >> $tbs_chk_html
            while [ "$i" -le 8 ];
            do
               p_head_b=`echo "$p_head"|awk '{print $'$i'}'`
               echo "<td>$p_head_b</td>" >> $tbs_chk_html
               i=`expr $i + 1`
            done
            echo "</tr>" >> $tbs_chk_html
            i=1
            while [ "$i" -le "$p_wc" ];
            do
              t=1
              p_b=`echo "$p"|sed -n ''$i','$i' p'`
              echo "<tr>" >> $tbs_chk_html
              while [ "$t" -le 8 ];
              do
         	if [ "$t" -eq 8 ];then
         	   p_b_b=`echo "$p_b"|awk '{$1=$2=$3=$4=$5=$6=$7="";print $0}'`
         	   echo "<td>$p_b_b</td>" >> $tbs_chk_html
         	else
                    p_b_b=`echo "$p_b"|awk '{print $'$t'}'`
         	   echo "<td>$p_b_b</td>" >> $tbs_chk_html
         	fi
         	t=`expr $t + 1`
              done
              echo "</tr>" >> $tbs_chk_html
              i=`expr $i + 1` 
            done
         fi
      fi
      echo "</table>" >> $tbs_chk_html
   fi

fi
#將值傳進tmp file


#if [ -n "$tbs_ov" ];then
#	echo "<b>=====表格空間使用率=====</b>"
#	#echo -n "<pre>" > $alert_file
#	#echo "<font color=blue>==== "$today"  ====</font>" >> $alert_file
#	#echo "<font color=red>====      WARNING!!!     ====</font>" >> $alert_file
#	echo "NOW!! T100 DB tablespace use over <font color=red>$lim %</font>"
#	echo "=== TABLESPACE ==="
#	echo "$tbs"
#	echo ""
#	echo ""
#	echo "================================================================"
#fi
